#protocol bgp r48 {
#    local 2a06:a003:51b5::2 as 134478;
#    neighbor 2a06:a003:51b5::1 as 44570;
#    ipv6 {
#        import where bgp_import("transit");
#        export where bgp_export("member");
#    };
#}
#protocol bgp he_6939 {
#    local 2001:7f8:f2:e1:0:13:4478:1 as 134478;
#    neighbor 2001:7f8:f2:e1::6939:1 as 6939;
#    ipv6 {
#        import where bgp_import("transit");
#        export where bgp_export("member");
#    };
#}

function bgp_export_downstream() {
    # if is_bogon_asn() then return false;
    # if is_bogon_prefix() then return false; 
    if source != RTS_BGP then return false;
    if bgp_large_community ~ [(134478, 4, 30000)] then return false;
    if bgp_large_community !~ [(134478, 2, 100)] then return false;
    return true;
}

protocol bgp he_6939 {
    local 2001:7f8:f2:e1:0:13:4478:1 as 134478;
    neighbor 2001:7f8:f2:e1::6939:1 as 6939;
    ipv6 {
	preference 110;
        import filter{
            #if net ~ bgp_import("transit") then accept;
            # if is_bogon_asn() then {
            #         #print "is bogon asn ", net, " for ASN ", bgp_path.last;
            #         reject;
            # }
            # if is_bogon_prefix() then {
            #         #print "is bogon prefix ", net, " for ASN ", bgp_path.last;
            #         reject;
            # }
            # if (roa_check(r6, net, bgp_path.last) = ROA_INVALID) then
            # {
            #         #print "Ignore RPKI invalid ", net, " for ASN ", bgp_path.last;
            #        reject;
            # }
            bgp_large_community.delete([(134478, 2, *)]);
            bgp_large_community.delete([(134478, 1, *)]);
            bgp_large_community.delete([(134478, 3, *)]);
            bgp_large_community.add((134478, 3, 30000));
            accept;
        };

        export filter{
            if bgp_export("member") then accept;
            #if bgp_export() then accept;
            if bgp_export_downstream() then accept;
            else reject;
       };
    };
}

protocol bgp he_6939v4 {
    local 185.1.167.137 as 134478;
    neighbor 185.1.167.69 as 6939;
    ipv4 {
        import none;
        export none;
    };
}
protocol bgp as211398 {
    local 2001:7f8:f2:e1:0:13:4478:1 as 134478;
    neighbor 2001:7f8:f2:e1:0:21:1398:2  as 211398;
    ipv6 {
	preference 110;
        import filter{
            #if net ~ bgp_import("transit") then accept;
            # if is_bogon_asn() then {
            #         #print "is bogon asn ", net, " for ASN ", bgp_path.last;
            #         reject;
            # }
            # if is_bogon_prefix() then {
            #         #print "is bogon prefix ", net, " for ASN ", bgp_path.last;
            #         reject;
            # }
            # if (roa_check(r6, net, bgp_path.last) = ROA_INVALID) then
            # {
            #         #print "Ignore RPKI invalid ", net, " for ASN ", bgp_path.last;
            #        reject;
            # }
            bgp_large_community.delete([(134478, 2, *)]);
            bgp_large_community.delete([(134478, 1, *)]);
            bgp_large_community.delete([(134478, 3, *)]);
            bgp_large_community.add((134478, 3, 30000));
            accept;
        };

        export filter{
            if bgp_export("member") then accept;
            #if bgp_export() then accept;
            if bgp_export_downstream() then accept;
    };
  };
}
